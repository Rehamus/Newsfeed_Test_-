plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'jacoco'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // AWS SDK
    implementation 'software.amazon.awssdk:s3:2.20.23'
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'
    // Mockito
    testImplementation 'org.mockito:mockito-core:5.8.0'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    // Spring Boot Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-validation'
    // Apache Commons
    implementation 'commons-fileupload:commons-fileupload:1.3.1'
    implementation 'commons-io:commons-io:2.4'
    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    // JWT
    compileOnly 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // JUnit Platform
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // JSON
    implementation 'org.json:json:20230227'
    // 다른 종속성들...
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // 중복된 라이브러리 제외
    configurations.all {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }

    // Spring Boot Starter Mail 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    testImplementation 'org.mockito:mockito-core:5.8.0'
    testImplementation 'org.mockito:mockito-junit-jupiter'

    testImplementation 'org.jacoco:org.jacoco.agent:0.8.12'

}

jacoco {
    toolVersion = "0.8.12"
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // 테스트가 끝난 후에 보고서를 생성합니다.
}

jacocoTestReport {
    dependsOn test // 테스트가 먼저 실행되어야 합니다.
    reports {
        xml.required.set(true)
        csv.required.set(false)
        html.outputLocation.set(layout.buildDirectory.dir('jacocoHtml'))
    }
}
test {
    jvmArgs '-XX:+EnableDynamicAgentLoading'
}
